{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["useStyles","makeStyles","theme","rollIcon","marginRight","spacing","IndexPage","classes","_useState","useState","diceNumber","setDiceNumber","_useState2","diceSides","setDiceSides","_useState3","rollResult","setRollResult","resultValues","Array","from","Set","sort","a","b","_useState4","useCascading","setUseCascading","react__WEBPACK_IMPORTED_MODULE_9___default","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","container","item","xs","sm","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","variant","direction","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","onClick","Math","max","_material_ui_icons__WEBPACK_IMPORTED_MODULE_18__","_material_ui_core__WEBPACK_IMPORTED_MODULE_15__","value","onChange","event","number","target","Number","label","_material_ui_icons__WEBPACK_IMPORTED_MODULE_19__","sides","_material_ui_core__WEBPACK_IMPORTED_MODULE_16__","checked","_material_ui_core__WEBPACK_IMPORTED_MODULE_17__","color","results","rollDice","cascading","console","log","floor","random","flatMap","val","_material_ui_icons__WEBPACK_IMPORTED_MODULE_20__","className","join","reduce","total","result","map","resultNumber","filter","length","key"],"mappings":"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","file":"component---src-pages-index-js-14e17f53560a187ae7cf.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Switch,\r\n  Button,\r\n  IconButton,\r\n} from '@material-ui/core'\r\nimport {\r\n  Casino as CasinoIcon,\r\n  Add as AddIcon,\r\n  Remove as RemoveIcon,\r\n} from '@material-ui/icons'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  rollIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst rollDice = (number, sides, cascading) => {\r\n  console.log('roll', number, sides, cascading)\r\n  return Array.from(Array(Number(number)), () => {\r\n    const result = Math.floor(sides * Math.random()) + 1\r\n    return result\r\n  }).flatMap(val =>\r\n    val === sides && cascading ? rollDice(2, sides, cascading) : val\r\n  )\r\n}\r\n\r\nconst IndexPage = () => {\r\n  const classes = useStyles()\r\n\r\n  const [diceNumber, setDiceNumber] = useState(3)\r\n  const handleChangeDiceNumber = event => {\r\n    const {\r\n      target: { value: number },\r\n    } = event\r\n    setDiceNumber(Math.max(Number(number), 1))\r\n  }\r\n  const handleRemoveDiceNumber = () => {\r\n    setDiceNumber(Math.max(diceNumber - 1, 1))\r\n  }\r\n  const handleAddDiceNumber = () => {\r\n    setDiceNumber(diceNumber + 1)\r\n  }\r\n\r\n  const [diceSides, setDiceSides] = useState(6)\r\n  const handleChangeDiceSides = event => {\r\n    const {\r\n      target: { value: sides },\r\n    } = event\r\n    setDiceSides(Math.max(Number(sides), 2))\r\n  }\r\n  const handleRemoveDiceSide = () => {\r\n    setDiceSides(Math.max(diceSides - 1, 2))\r\n  }\r\n  const handleAddDiceSide = () => {\r\n    setDiceSides(diceSides + 1)\r\n  }\r\n\r\n  const [rollResult, setRollResult] = useState([])\r\n  const resultValues = Array.from(new Set(rollResult)).sort((a, b) => a - b)\r\n\r\n  const handleRollDice = () => {\r\n    const results = rollDice(diceNumber, diceSides, useCascading)\r\n    setRollResult(results)\r\n  }\r\n\r\n  const [useCascading, setUseCascading] = useState(true)\r\n  const toggleUseCascading = () => {\r\n    setUseCascading(!useCascading)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h3\">Dice roller</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Grid container direction=\"column\" spacing={2}>\r\n            <Grid item>\r\n              <IconButton onClick={handleRemoveDiceNumber}>\r\n                <RemoveIcon />\r\n              </IconButton>\r\n              <TextField\r\n                value={diceNumber}\r\n                onChange={handleChangeDiceNumber}\r\n                label=\"Number of dice\"\r\n                variant=\"outlined\"\r\n              />\r\n              <IconButton onClick={handleAddDiceNumber}>\r\n                <AddIcon />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton onClick={handleRemoveDiceSide}>\r\n                <RemoveIcon />\r\n              </IconButton>\r\n              <TextField\r\n                value={diceSides}\r\n                onChange={handleChangeDiceSides}\r\n                label=\"Number of side per die\"\r\n                variant=\"outlined\"\r\n              />\r\n              <IconButton onClick={handleAddDiceSide}>\r\n                <AddIcon />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"caption\">Use cascading dice</Typography>\r\n              <Switch checked={useCascading} onChange={toggleUseCascading} />\r\n            </Grid>\r\n            <Grid item variant=\"extended\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleRollDice}\r\n              >\r\n                <CasinoIcon className={classes.rollIcon} />\r\n                Roll dice\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Grid container spacing={2} direction=\"column\">\r\n            <Grid item>\r\n              <Typography variant=\"h5\">Results</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body1\" color=\"textSecondary\">\r\n                All results\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                {rollResult.sort().join(',')}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body1\" color=\"textSecondary\">\r\n                Total value\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                {rollResult.reduce((total, result) => total + result, 0)}\r\n              </Typography>\r\n            </Grid>\r\n            {resultValues.map(value => {\r\n              const resultNumber = rollResult.filter(result => result === value)\r\n                .length\r\n              return !!resultNumber ? (\r\n                <Grid key={`${value}s`} item>\r\n                  <Typography variant=\"body1\" color=\"textSecondary\">\r\n                    {`Number of ${value}'s`}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">{resultNumber}</Typography>\r\n                </Grid>\r\n              ) : null\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n"],"sourceRoot":""}