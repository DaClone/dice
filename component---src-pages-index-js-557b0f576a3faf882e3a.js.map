{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["useStyles","makeStyles","theme","rollIcon","marginRight","spacing","IndexPage","classes","_useState","useState","diceNumber","setDiceNumber","_useState2","diceSides","setDiceSides","_useState3","rollResult","setRollResult","_useState4","useCascading","setUseCascading","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","container","item","xs","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","variant","direction","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","value","onChange","event","number","target","label","inputProps","type","sides","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","checked","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","color","onClick","results","rollDice","cascading","Array","from","Math","floor","random","flatMap","val","_material_ui_icons__WEBPACK_IMPORTED_MODULE_12__","className","sort","join","reduce","total","result","v","i","num","resultNumber","filter","length","key"],"mappings":"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","file":"component---src-pages-index-js-557b0f576a3faf882e3a.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Switch,\r\n  Button,\r\n} from '@material-ui/core'\r\nimport { Casino as CasinoIcon } from '@material-ui/icons'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  rollIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst rollDice = (number, sides, cascading) => {\r\n  return Array.from(\r\n    Array(number),\r\n    () => Math.floor(sides * Math.random()) + 1\r\n  ).flatMap(val => (val === sides && cascading ? rollDice(2, sides) : val))\r\n}\r\n\r\nconst IndexPage = () => {\r\n  const classes = useStyles()\r\n\r\n  const [diceNumber, setDiceNumber] = useState(3)\r\n  const handleChangeDiceNumber = event => {\r\n    const {\r\n      target: { value: number },\r\n    } = event\r\n    setDiceNumber(number)\r\n  }\r\n\r\n  const [diceSides, setDiceSides] = useState(6)\r\n  const handleChangeDiceSides = event => {\r\n    const {\r\n      target: { value: sides },\r\n    } = event\r\n    setDiceSides(sides)\r\n  }\r\n\r\n  const [rollResult, setRollResult] = useState([])\r\n  const handleRollDice = () => {\r\n    const results = rollDice(diceNumber, diceSides, useCascading)\r\n    setRollResult(results)\r\n  }\r\n\r\n  const [useCascading, setUseCascading] = useState(true)\r\n  const toggleUseCascading = () => {\r\n    setUseCascading(!useCascading)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h3\">Dice roller</Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Grid container direction=\"column\" spacing={2}>\r\n            <Grid item>\r\n              <TextField\r\n                value={diceNumber}\r\n                onChange={handleChangeDiceNumber}\r\n                label=\"Number of dice\"\r\n                variant=\"outlined\"\r\n                inputProps={{ type: 'number' }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                value={diceSides}\r\n                onChange={handleChangeDiceSides}\r\n                label=\"Number of side per die\"\r\n                variant=\"outlined\"\r\n                inputProps={{ type: 'number' }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"caption\">Use cascading dice</Typography>\r\n              <Switch checked={useCascading} onChange={toggleUseCascading} />\r\n            </Grid>\r\n            <Grid item variant=\"extended\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleRollDice}\r\n              >\r\n                <CasinoIcon className={classes.rollIcon} />\r\n                Roll dice\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Grid container spacing={2} direction=\"column\">\r\n            <Grid item>\r\n              <Typography variant=\"h5\">Results</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body1\" color=\"textSecondary\">\r\n                All results\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                {rollResult.sort().join(',')}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body1\" color=\"textSecondary\">\r\n                Total value\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                {rollResult.reduce((total, result) => total + result, 0)}\r\n              </Typography>\r\n            </Grid>\r\n            {Array.from(Array(diceSides), (v, i) => {\r\n              const num = i + 1\r\n              const resultNumber = rollResult.filter(result => result === num)\r\n                .length\r\n              return !!resultNumber ? (\r\n                <Grid key={`${num}s`} item>\r\n                  <Typography variant=\"body1\" color=\"textSecondary\">\r\n                    {`Number of ${num}'s`}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">{resultNumber}</Typography>\r\n                </Grid>\r\n              ) : null\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n"],"sourceRoot":""}