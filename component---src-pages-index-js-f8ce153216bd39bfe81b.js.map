{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["useStyles","makeStyles","theme","rollIcon","marginRight","spacing","IndexPage","classes","_useState","useState","diceNumber","setDiceNumber","_useState2","diceSides","setDiceSides","_useState3","rollResult","setRollResult","resultValues","Array","from","Set","sort","a","b","_useState4","useCascading","setUseCascading","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","container","item","xs","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","variant","direction","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","value","onChange","event","number","target","label","inputProps","type","sides","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","checked","_material_ui_core__WEBPACK_IMPORTED_MODULE_15__","color","onClick","results","rollDice","cascading","Math","floor","random","flatMap","val","_material_ui_icons__WEBPACK_IMPORTED_MODULE_16__","className","join","reduce","total","result","map","console","log","resultNumber","filter","length","key"],"mappings":"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","file":"component---src-pages-index-js-f8ce153216bd39bfe81b.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Switch,\r\n  Button,\r\n} from '@material-ui/core'\r\nimport { Casino as CasinoIcon } from '@material-ui/icons'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  rollIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst rollDice = (number, sides, cascading) => {\r\n  return Array.from(\r\n    Array(number),\r\n    () => Math.floor(sides * Math.random()) + 1\r\n  ).flatMap(val => (val === sides && cascading ? rollDice(2, sides) : val))\r\n}\r\n\r\nconst IndexPage = () => {\r\n  const classes = useStyles()\r\n\r\n  const [diceNumber, setDiceNumber] = useState(3)\r\n  const handleChangeDiceNumber = event => {\r\n    const {\r\n      target: { value: number },\r\n    } = event\r\n    setDiceNumber(number)\r\n  }\r\n\r\n  const [diceSides, setDiceSides] = useState(6)\r\n  const handleChangeDiceSides = event => {\r\n    const {\r\n      target: { value: sides },\r\n    } = event\r\n    setDiceSides(sides)\r\n  }\r\n\r\n  const [rollResult, setRollResult] = useState([])\r\n  const resultValues = Array.from(new Set(rollResult)).sort((a, b) => a - b)\r\n  const handleRollDice = () => {\r\n    const results = rollDice(diceNumber, diceSides, useCascading)\r\n    setRollResult(results)\r\n  }\r\n\r\n  const [useCascading, setUseCascading] = useState(true)\r\n  const toggleUseCascading = () => {\r\n    setUseCascading(!useCascading)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h3\">Dice roller</Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Grid container direction=\"column\" spacing={2}>\r\n            <Grid item>\r\n              <TextField\r\n                value={diceNumber}\r\n                onChange={handleChangeDiceNumber}\r\n                label=\"Number of dice\"\r\n                variant=\"outlined\"\r\n                inputProps={{ type: 'number' }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                value={diceSides}\r\n                onChange={handleChangeDiceSides}\r\n                label=\"Number of side per die\"\r\n                variant=\"outlined\"\r\n                inputProps={{ type: 'number' }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"caption\">Use cascading dice</Typography>\r\n              <Switch checked={useCascading} onChange={toggleUseCascading} />\r\n            </Grid>\r\n            <Grid item variant=\"extended\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleRollDice}\r\n              >\r\n                <CasinoIcon className={classes.rollIcon} />\r\n                Roll dice\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Grid container spacing={2} direction=\"column\">\r\n            <Grid item>\r\n              <Typography variant=\"h5\">Results</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body1\" color=\"textSecondary\">\r\n                All results\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                {rollResult.sort().join(',')}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body1\" color=\"textSecondary\">\r\n                Total value\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                {rollResult.reduce((total, result) => total + result, 0)}\r\n              </Typography>\r\n            </Grid>\r\n            {/* {Array.from(Array(diceSides), (v, i) => {\r\n              const num = i + 1\r\n              const resultNumber = rollResult.filter(result => result === num)\r\n                .length\r\n              console.log(diceSides, resultNumber)\r\n              return !!resultNumber ? (\r\n                <Grid key={`${num}s`} item>\r\n                  <Typography variant=\"body1\" color=\"textSecondary\">\r\n                    {`Number of ${num}'s`}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">{resultNumber}</Typography>\r\n                </Grid>\r\n              ) : null\r\n            })} */}\r\n            {resultValues.map(value => {\r\n              console.log(value, rollResult)\r\n              const resultNumber = rollResult.filter(result => result === value)\r\n                .length\r\n              return !!resultNumber ? (\r\n                <Grid key={`${value}s`} item>\r\n                  <Typography variant=\"body1\" color=\"textSecondary\">\r\n                    {`Number of ${value}'s`}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">{resultNumber}</Typography>\r\n                </Grid>\r\n              ) : null\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n"],"sourceRoot":""}